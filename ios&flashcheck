#!/usr/bin/expect

set timeout 30
set username [lindex $argv 0]
set password [lindex $argv 1]
set snmpuser [lindex $argv 2]
set snmpkey [lindex $argv 3]
set mkfold [lindex $argv 4]
set Directory /home/repos/public/iosup/logs
set tdate [clock format [clock seconds] -format %Y-%h-%d_%H:%M:%S_ -timezone :Asia/Manila]
set FNAME FlashCheck_Result.txt

set CTRS 0
set CTRF 0
set TOTAL 0
set CTRI 1
set CTRC 0

set LOGNAME "$Directory/$tdate$FNAME"

log_user 0

set f [open /home/repos/public/.mimetool/iplist]
set ipadd [split [read -nonewline $f] "\n"]
close $f

log_file $LOGNAME
send_log "IP Address;IOS Version;HWMODEL;F1 Free;F1 %Free;F2 Free;F2 %Free;F3 Free;F3 %Free;F4 Free;F4 %Free;F5 Free;F5 %Free;F6 Free;F6 %Free;F7 Free;F7 %Free;F8 Free;F8 %Free\n"
log_file

send_user "IP ADDRESS\t\t\tSTATUS\n"

# Iterate over the hosts
foreach host $ipadd {

##GET IOSVERSION
set tempios [catch {exec snmpwalk -v3 -u $snmpuser -A $snmpkey -l authNoPriv $host 1.3.6.1.4.1.9.9.25 | grep -oP "(?<=CW_VERSION\\$).*(?=\\$)"}]
     if {$tempios == 0 } {
          set IOS [exec snmpwalk -v3 -u $snmpuser -A $snmpkey -l authNoPriv $host 1.3.6.1.4.1.9.9.25 | grep -oP "(?<=CW_VERSION\\$).*(?=\\$)"]
                  incr CTRS
     } else {
          set IOS "N/A"
                  incr CTRF
     }
     log_file $LOGNAME
     send_log "$host;$IOS;"
     log_file

##GET HWMODEL
set tempmodel [catch {exec snmpwalk -v3 -u $snmpuser -A $snmpkey -l authNoPriv $host 1.3.6.1.4.1.9.9.25.1.1.1.2.3 | grep -oP "(?<=CW_FAMILY\\$).*(?=\\$)"}]
     if {$tempmodel == 0 } {
          set HWMODEL [exec snmpwalk -v3 -u $snmpuser -A $snmpkey -l authNoPriv $host 1.3.6.1.4.1.9.9.25.1.1.1.2.3 | grep -oP "(?<=CW_FAMILY\\$).*(?=\\$)"]
     } else {
          set HWMODEL "N/A"
     }
     log_file $LOGNAME
     send_log "$HWMODEL;"
     log_file

##GET FLASH
while {$CTRI < 20} {
set temp1 [catch {exec snmpwalk -v3 -u $snmpuser -A $snmpkey -l authNoPriv $host 1.3.6.1.4.1.9.9.10.1.1.4.1.1.5.$CTRI | grep -oP "(?<=Gauge32: ).*"}]
     if {$temp1 == 0 } {
          set FreeFlash [exec snmpwalk -v3 -u $snmpuser -A $snmpkey -l authNoPriv $host 1.3.6.1.4.1.9.9.10.1.1.4.1.1.5.$CTRI | grep -oP "(?<=Gauge32: ).*"]
          set TotalFlash [exec snmpwalk -v3 -u $snmpuser -A $snmpkey -l authNoPriv $host 1.3.6.1.4.1.9.9.10.1.1.4.1.1.4.$CTRI | grep -oP "(?<=Gauge32: ).*"]
          incr CTRI
          set DIV [expr {double($FreeFlash)/$TotalFlash}]
          set PERCNT [expr {$DIV*100}] 
          set ROUNDPERCNT [expr {double(round(100*$PERCNT))/100}]
          set FMEG [expr {double($FreeFlash)/1000000}]
          set ROUNDFMEG [expr {double(round(100*$FMEG))/100}]
          log_file $LOGNAME
          send_log "$ROUNDFMEG MB;$ROUNDPERCNT%;"
          log_file
     } else {
             set CTRC [expr $CTRI-1] 
             set temp2 [catch {exec snmpwalk -v3 -u $snmpuser -A $snmpkey -l authNoPriv $host 1.3.6.1.4.1.9.9.10.1.1.4.1.1.5.$CTRI | grep -oP "(?<=Gauge32: ).*"}]
             if {$temp2 == 0 } {
                log_file $LOGNAME
                send_log "\n"
                log_file
             } else {
                set CTRI 100
                log_file $LOGNAME
                send_log " \n"
                log_file
     }
   }
 }

set CTRI 1
set CTRC 0

send_user "$host\t\tCompleted\n"  
}


set TOTAL "[expr $CTRS+$CTRF]"

puts "\n"
puts "\n"
puts "\n"

puts "================="
puts "Script completed"
puts ""                                                                                                                  
puts "TOTAL Device tested: $TOTAL"   
puts ""
puts "To view result copy this link: $LOGNAME"
puts "Paste the output to excel file using ';' as delimiter"
puts "================="

exit
