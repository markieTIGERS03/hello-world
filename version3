#!/usr/bin/env /home/repos/public/Python/bin/python3.6

import pexpect
from pprint import pprint
import re
import sys
import getopt

try:
    opts, args = getopt.getopt(sys.argv[1:], 'u:p:e:h', ['username=', 'password=', 'enablepass=', 'help'])
except getopt.GetoptError:
    print('Usage: xxxx.py -u <username> -p <password> -e <enablepass>')
    sys.exit(2)

for opt, arg in opts:
    if opt in ('-h', '--help'):
        print('Usage: xxxx.py -u <username> -p <password> -e <enablepass>')
        sys.exit(2)
    elif opt in ('-u', '--username'):
        MIMEID = arg
    elif opt in ('-p', '--password'):
        MIMETacacs = arg
    elif opt in ('-e', '--enablepass'):
        MIMEEnable = arg
    else:
        print('Usage: xxxx.py -u <username> -p <password> -e <enablepass>')
        sys.exit(2)
        
try:
    if MIMEID == "":
        print(MIMEID)
except:
    print('no username defined. use -u option to enter username')
    exit()
try:
    if MIMETacacs == "":
        print(MIMEID)
except:
    print('no password defined. use -p option to enter password')
    exit()
try:
    if MIMEEnable == "":
        print(MIMEID)
except:
    print('no enablepass defined. use -e option to enter enablepass. type \'bypass\' for juniper')
    exit()

# Create regular expressions to match interfaces and OSPF
MIMEID_BYTES = str.encode(MIMEID)
cPrompt = re.compile(b'[>#]\s?$')
jPrompt = re.compile(b'%b@.*[>#]\s?$'%MIMEID_BYTES)

with open('iplist', 'r') as f:
    ipadd = [line.strip() for line in f]

for host in ipadd:
    #Establish SSH connection with timeout set to 10
    session = pexpect.spawn('ssh -o ConnectTimeout=10 -oStrictHostKeyChecking=no -l ' + MIMEID + " " + host, timeout=15)
    result = session.expect(['assword:', pexpect.TIMEOUT, pexpect.EOF])
    
    # Check for failure
    if result != 0:
        print('ERROR: Timeout or unexpected reply from device: ' + host)
        print('\r')
        print('\r')
        print('\r')
        continue
 
    # Login and detect device model
    session.sendline(MIMETacacs)
    result = session.expect([cPrompt, jPrompt])
    print('---Login to ' + host + ' successful')
    if result == 0:
        enableFlag = True
        print('---Cisco device detected')
        session.sendline('enable')
        result = session.expect('assword:')
        session.sendline(MIMEEnable)
        result = session.expect(cPrompt)
        print('--- enable successful')
        with open('commands-cisco', 'r') as g:
            cmdlist = [line2.strip() for line2 in g]
    elif result == 1:
        enableFlag = False
        with open('commands-juniper', 'r') as g:
            cmdlist = [line2.strip() for line2 in g]
        print('---Juniper device detected')
    else:
        print('---Device is neither cisco or juniper. Skipping')
        continue
    
    #create logfile path
    logpath = '/home/' + MIMEID + '/piton/logs/' + host + '.txt'
    session.logfile = open(logpath, 'wb')

    for cmd in cmdlist:
        session.sendline(cmd)
        result = session.expect([cPrompt, jPrompt])
        print('---Running command: ' + cmd)
    
    session.sendline()
    result = session.expect([cPrompt, jPrompt])
    session.sendline('exit')
    print('---Successfully exited device ' + host)
    session.logfile.close()
    print('---Log created: ' + logpath)
    print('\r')
    print('\r')
    print('\r')

print('--- end of test code')
exit()
